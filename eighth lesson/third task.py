# 3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие
# только чисел. Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя
# данные и заполнять список. Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не
# остановит работу скрипта, введя, например, команду “stop”. При этом скрипт завершается, сформированный
# список выводится на экран.
# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
# При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить
# его в список, только если введено число. Класс-исключение должен не позволить пользователю ввести текст
# (не число) и отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.

class UserList:
    def input_user():
        user_list = []
        while True:
            try:
                user_input = input("Введите значение, которое необходимо добавить. Чтобы выйти пишите"
                                 " \"stop\": ")
                user_input = user_input.lower()
                if user_input != "stop":
                    user_input = int(user_input)
                    user_list.append(user_input)
                    print(f"В списке: {user_list}\n")
                else:
                    return f"\nВыход.\nВ списке: {user_list}\n"
            except:
                print(f"Нето пишем. Пробуем ещё. ")

a = UserList
print(a.input_user())